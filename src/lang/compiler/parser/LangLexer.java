// Generated from E:/Projects/Java/intellij-ws/langparser/grammar\Lang.g4 by ANTLR 4.5.1
package lang.compiler.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class LangLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, IDENT=49, STRING=50, REAL=51, SINT=52, UINT=53, 
		DIGIT=54, CHAR=55, UCHAR=56, LCHAR=57, WS=58, ENDL=59, LNCOM=60, BLKCOM=61;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "IDENT", 
		"STRING", "REAL", "SINT", "UINT", "DIGIT", "CHAR", "UCHAR", "LCHAR", "WS", 
		"ENDL", "LNCOM", "BLKCOM"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "';'", "'{'", "'}'", "'return'", "','", "'if'", "'('", "')'", "'else'", 
		"'for'", "'while'", "'do'", "'foreach'", "'=:'", "'['", "'..'", "']'", 
		"'=>'", "'='", "':='", "'::='", "'@'", "'*='", "'/='", "'%='", "'+='", 
		"'-='", "'!'", "'*'", "'/'", "'%'", "'+'", "'-'", "'null'", "'true'", 
		"'false'", "'void'", "'bool'", "'s8'", "'s16'", "'s32'", "'s64'", "'u8'", 
		"'u16'", "'u32'", "'u64'", "'f32'", "'f64'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "IDENT", "STRING", "REAL", "SINT", "UINT", "DIGIT", "CHAR", "UCHAR", 
		"LCHAR", "WS", "ENDL", "LNCOM", "BLKCOM"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public LangLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Lang.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2?\u019a\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7"+
		"\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3"+
		"\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16"+
		"\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24"+
		"\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\31"+
		"\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36"+
		"\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3%\3"+
		"%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3)"+
		"\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3-\3-\3-\3-\3.\3.\3.\3.\3/\3/\3/\3/"+
		"\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62\6\62\u0122\n\62\r\62\16"+
		"\62\u0123\3\62\3\62\3\62\3\62\7\62\u012a\n\62\f\62\16\62\u012d\13\62\3"+
		"\62\7\62\u0130\n\62\f\62\16\62\u0133\13\62\3\62\3\62\3\62\3\62\7\62\u0139"+
		"\n\62\f\62\16\62\u013c\13\62\5\62\u013e\n\62\3\63\3\63\7\63\u0142\n\63"+
		"\f\63\16\63\u0145\13\63\3\63\3\63\3\64\5\64\u014a\n\64\3\64\6\64\u014d"+
		"\n\64\r\64\16\64\u014e\3\64\3\64\6\64\u0153\n\64\r\64\16\64\u0154\3\64"+
		"\3\64\5\64\u0159\n\64\3\64\5\64\u015c\n\64\3\65\3\65\3\65\5\65\u0161\n"+
		"\65\3\66\6\66\u0164\n\66\r\66\16\66\u0165\3\67\3\67\38\38\58\u016c\n8"+
		"\39\39\3:\3:\3;\6;\u0173\n;\r;\16;\u0174\3;\3;\3<\5<\u017a\n<\3<\3<\3"+
		"<\3<\3=\3=\3=\3=\7=\u0184\n=\f=\16=\u0187\13=\3=\3=\3=\3=\3>\3>\3>\3>"+
		"\7>\u0191\n>\f>\16>\u0194\13>\3>\3>\3>\3>\3>\5\u0143\u0185\u0192\2?\3"+
		"\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37"+
		"\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37="+
		" ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9"+
		"q:s;u<w=y>{?\3\2\b\4\2GGgg\4\2--//\3\2\62;\3\2C\\\3\2c|\4\2\13\13\"\""+
		"\u01af\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2"+
		"\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3"+
		"\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2"+
		"\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2"+
		"/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2"+
		"\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2"+
		"G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3"+
		"\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2"+
		"\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2"+
		"m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3"+
		"\2\2\2\2{\3\2\2\2\3}\3\2\2\2\5\177\3\2\2\2\7\u0081\3\2\2\2\t\u0083\3\2"+
		"\2\2\13\u008a\3\2\2\2\r\u008c\3\2\2\2\17\u008f\3\2\2\2\21\u0091\3\2\2"+
		"\2\23\u0093\3\2\2\2\25\u0098\3\2\2\2\27\u009c\3\2\2\2\31\u00a2\3\2\2\2"+
		"\33\u00a5\3\2\2\2\35\u00ad\3\2\2\2\37\u00b0\3\2\2\2!\u00b2\3\2\2\2#\u00b5"+
		"\3\2\2\2%\u00b7\3\2\2\2\'\u00ba\3\2\2\2)\u00bc\3\2\2\2+\u00bf\3\2\2\2"+
		"-\u00c3\3\2\2\2/\u00c5\3\2\2\2\61\u00c8\3\2\2\2\63\u00cb\3\2\2\2\65\u00ce"+
		"\3\2\2\2\67\u00d1\3\2\2\29\u00d4\3\2\2\2;\u00d6\3\2\2\2=\u00d8\3\2\2\2"+
		"?\u00da\3\2\2\2A\u00dc\3\2\2\2C\u00de\3\2\2\2E\u00e0\3\2\2\2G\u00e5\3"+
		"\2\2\2I\u00ea\3\2\2\2K\u00f0\3\2\2\2M\u00f5\3\2\2\2O\u00fa\3\2\2\2Q\u00fd"+
		"\3\2\2\2S\u0101\3\2\2\2U\u0105\3\2\2\2W\u0109\3\2\2\2Y\u010c\3\2\2\2["+
		"\u0110\3\2\2\2]\u0114\3\2\2\2_\u0118\3\2\2\2a\u011c\3\2\2\2c\u013d\3\2"+
		"\2\2e\u013f\3\2\2\2g\u0149\3\2\2\2i\u0160\3\2\2\2k\u0163\3\2\2\2m\u0167"+
		"\3\2\2\2o\u016b\3\2\2\2q\u016d\3\2\2\2s\u016f\3\2\2\2u\u0172\3\2\2\2w"+
		"\u0179\3\2\2\2y\u017f\3\2\2\2{\u018c\3\2\2\2}~\7=\2\2~\4\3\2\2\2\177\u0080"+
		"\7}\2\2\u0080\6\3\2\2\2\u0081\u0082\7\177\2\2\u0082\b\3\2\2\2\u0083\u0084"+
		"\7t\2\2\u0084\u0085\7g\2\2\u0085\u0086\7v\2\2\u0086\u0087\7w\2\2\u0087"+
		"\u0088\7t\2\2\u0088\u0089\7p\2\2\u0089\n\3\2\2\2\u008a\u008b\7.\2\2\u008b"+
		"\f\3\2\2\2\u008c\u008d\7k\2\2\u008d\u008e\7h\2\2\u008e\16\3\2\2\2\u008f"+
		"\u0090\7*\2\2\u0090\20\3\2\2\2\u0091\u0092\7+\2\2\u0092\22\3\2\2\2\u0093"+
		"\u0094\7g\2\2\u0094\u0095\7n\2\2\u0095\u0096\7u\2\2\u0096\u0097\7g\2\2"+
		"\u0097\24\3\2\2\2\u0098\u0099\7h\2\2\u0099\u009a\7q\2\2\u009a\u009b\7"+
		"t\2\2\u009b\26\3\2\2\2\u009c\u009d\7y\2\2\u009d\u009e\7j\2\2\u009e\u009f"+
		"\7k\2\2\u009f\u00a0\7n\2\2\u00a0\u00a1\7g\2\2\u00a1\30\3\2\2\2\u00a2\u00a3"+
		"\7f\2\2\u00a3\u00a4\7q\2\2\u00a4\32\3\2\2\2\u00a5\u00a6\7h\2\2\u00a6\u00a7"+
		"\7q\2\2\u00a7\u00a8\7t\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa\7c\2\2\u00aa"+
		"\u00ab\7e\2\2\u00ab\u00ac\7j\2\2\u00ac\34\3\2\2\2\u00ad\u00ae\7?\2\2\u00ae"+
		"\u00af\7<\2\2\u00af\36\3\2\2\2\u00b0\u00b1\7]\2\2\u00b1 \3\2\2\2\u00b2"+
		"\u00b3\7\60\2\2\u00b3\u00b4\7\60\2\2\u00b4\"\3\2\2\2\u00b5\u00b6\7_\2"+
		"\2\u00b6$\3\2\2\2\u00b7\u00b8\7?\2\2\u00b8\u00b9\7@\2\2\u00b9&\3\2\2\2"+
		"\u00ba\u00bb\7?\2\2\u00bb(\3\2\2\2\u00bc\u00bd\7<\2\2\u00bd\u00be\7?\2"+
		"\2\u00be*\3\2\2\2\u00bf\u00c0\7<\2\2\u00c0\u00c1\7<\2\2\u00c1\u00c2\7"+
		"?\2\2\u00c2,\3\2\2\2\u00c3\u00c4\7B\2\2\u00c4.\3\2\2\2\u00c5\u00c6\7,"+
		"\2\2\u00c6\u00c7\7?\2\2\u00c7\60\3\2\2\2\u00c8\u00c9\7\61\2\2\u00c9\u00ca"+
		"\7?\2\2\u00ca\62\3\2\2\2\u00cb\u00cc\7\'\2\2\u00cc\u00cd\7?\2\2\u00cd"+
		"\64\3\2\2\2\u00ce\u00cf\7-\2\2\u00cf\u00d0\7?\2\2\u00d0\66\3\2\2\2\u00d1"+
		"\u00d2\7/\2\2\u00d2\u00d3\7?\2\2\u00d38\3\2\2\2\u00d4\u00d5\7#\2\2\u00d5"+
		":\3\2\2\2\u00d6\u00d7\7,\2\2\u00d7<\3\2\2\2\u00d8\u00d9\7\61\2\2\u00d9"+
		">\3\2\2\2\u00da\u00db\7\'\2\2\u00db@\3\2\2\2\u00dc\u00dd\7-\2\2\u00dd"+
		"B\3\2\2\2\u00de\u00df\7/\2\2\u00dfD\3\2\2\2\u00e0\u00e1\7p\2\2\u00e1\u00e2"+
		"\7w\2\2\u00e2\u00e3\7n\2\2\u00e3\u00e4\7n\2\2\u00e4F\3\2\2\2\u00e5\u00e6"+
		"\7v\2\2\u00e6\u00e7\7t\2\2\u00e7\u00e8\7w\2\2\u00e8\u00e9\7g\2\2\u00e9"+
		"H\3\2\2\2\u00ea\u00eb\7h\2\2\u00eb\u00ec\7c\2\2\u00ec\u00ed\7n\2\2\u00ed"+
		"\u00ee\7u\2\2\u00ee\u00ef\7g\2\2\u00efJ\3\2\2\2\u00f0\u00f1\7x\2\2\u00f1"+
		"\u00f2\7q\2\2\u00f2\u00f3\7k\2\2\u00f3\u00f4\7f\2\2\u00f4L\3\2\2\2\u00f5"+
		"\u00f6\7d\2\2\u00f6\u00f7\7q\2\2\u00f7\u00f8\7q\2\2\u00f8\u00f9\7n\2\2"+
		"\u00f9N\3\2\2\2\u00fa\u00fb\7u\2\2\u00fb\u00fc\7:\2\2\u00fcP\3\2\2\2\u00fd"+
		"\u00fe\7u\2\2\u00fe\u00ff\7\63\2\2\u00ff\u0100\78\2\2\u0100R\3\2\2\2\u0101"+
		"\u0102\7u\2\2\u0102\u0103\7\65\2\2\u0103\u0104\7\64\2\2\u0104T\3\2\2\2"+
		"\u0105\u0106\7u\2\2\u0106\u0107\78\2\2\u0107\u0108\7\66\2\2\u0108V\3\2"+
		"\2\2\u0109\u010a\7w\2\2\u010a\u010b\7:\2\2\u010bX\3\2\2\2\u010c\u010d"+
		"\7w\2\2\u010d\u010e\7\63\2\2\u010e\u010f\78\2\2\u010fZ\3\2\2\2\u0110\u0111"+
		"\7w\2\2\u0111\u0112\7\65\2\2\u0112\u0113\7\64\2\2\u0113\\\3\2\2\2\u0114"+
		"\u0115\7w\2\2\u0115\u0116\78\2\2\u0116\u0117\7\66\2\2\u0117^\3\2\2\2\u0118"+
		"\u0119\7h\2\2\u0119\u011a\7\65\2\2\u011a\u011b\7\64\2\2\u011b`\3\2\2\2"+
		"\u011c\u011d\7h\2\2\u011d\u011e\78\2\2\u011e\u011f\7\66\2\2\u011fb\3\2"+
		"\2\2\u0120\u0122\7a\2\2\u0121\u0120\3\2\2\2\u0122\u0123\3\2\2\2\u0123"+
		"\u0121\3\2\2\2\u0123\u0124\3\2\2\2\u0124\u0125\3\2\2\2\u0125\u012b\5m"+
		"\67\2\u0126\u012a\7a\2\2\u0127\u012a\5o8\2\u0128\u012a\5m\67\2\u0129\u0126"+
		"\3\2\2\2\u0129\u0127\3\2\2\2\u0129\u0128\3\2\2\2\u012a\u012d\3\2\2\2\u012b"+
		"\u0129\3\2\2\2\u012b\u012c\3\2\2\2\u012c\u013e\3\2\2\2\u012d\u012b\3\2"+
		"\2\2\u012e\u0130\7a\2\2\u012f\u012e\3\2\2\2\u0130\u0133\3\2\2\2\u0131"+
		"\u012f\3\2\2\2\u0131\u0132\3\2\2\2\u0132\u0134\3\2\2\2\u0133\u0131\3\2"+
		"\2\2\u0134\u013a\5o8\2\u0135\u0139\7a\2\2\u0136\u0139\5o8\2\u0137\u0139"+
		"\5m\67\2\u0138\u0135\3\2\2\2\u0138\u0136\3\2\2\2\u0138\u0137\3\2\2\2\u0139"+
		"\u013c\3\2\2\2\u013a\u0138\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u013e\3\2"+
		"\2\2\u013c\u013a\3\2\2\2\u013d\u0121\3\2\2\2\u013d\u0131\3\2\2\2\u013e"+
		"d\3\2\2\2\u013f\u0143\7$\2\2\u0140\u0142\13\2\2\2\u0141\u0140\3\2\2\2"+
		"\u0142\u0145\3\2\2\2\u0143\u0144\3\2\2\2\u0143\u0141\3\2\2\2\u0144\u0146"+
		"\3\2\2\2\u0145\u0143\3\2\2\2\u0146\u0147\7$\2\2\u0147f\3\2\2\2\u0148\u014a"+
		"\7/\2\2\u0149\u0148\3\2\2\2\u0149\u014a\3\2\2\2\u014a\u014c\3\2\2\2\u014b"+
		"\u014d\5m\67\2\u014c\u014b\3\2\2\2\u014d\u014e\3\2\2\2\u014e\u014c\3\2"+
		"\2\2\u014e\u014f\3\2\2\2\u014f\u0150\3\2\2\2\u0150\u0152\7\60\2\2\u0151"+
		"\u0153\5m\67\2\u0152\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154\u0152\3\2"+
		"\2\2\u0154\u0155\3\2\2\2\u0155\u015b\3\2\2\2\u0156\u0158\t\2\2\2\u0157"+
		"\u0159\t\3\2\2\u0158\u0157\3\2\2\2\u0158\u0159\3\2\2\2\u0159\u015a\3\2"+
		"\2\2\u015a\u015c\5k\66\2\u015b\u0156\3\2\2\2\u015b\u015c\3\2\2\2\u015c"+
		"h\3\2\2\2\u015d\u0161\5k\66\2\u015e\u015f\7/\2\2\u015f\u0161\5k\66\2\u0160"+
		"\u015d\3\2\2\2\u0160\u015e\3\2\2\2\u0161j\3\2\2\2\u0162\u0164\5m\67\2"+
		"\u0163\u0162\3\2\2\2\u0164\u0165\3\2\2\2\u0165\u0163\3\2\2\2\u0165\u0166"+
		"\3\2\2\2\u0166l\3\2\2\2\u0167\u0168\t\4\2\2\u0168n\3\2\2\2\u0169\u016c"+
		"\5q9\2\u016a\u016c\5s:\2\u016b\u0169\3\2\2\2\u016b\u016a\3\2\2\2\u016c"+
		"p\3\2\2\2\u016d\u016e\t\5\2\2\u016er\3\2\2\2\u016f\u0170\t\6\2\2\u0170"+
		"t\3\2\2\2\u0171\u0173\t\7\2\2\u0172\u0171\3\2\2\2\u0173\u0174\3\2\2\2"+
		"\u0174\u0172\3\2\2\2\u0174\u0175\3\2\2\2\u0175\u0176\3\2\2\2\u0176\u0177"+
		"\b;\2\2\u0177v\3\2\2\2\u0178\u017a\7\17\2\2\u0179\u0178\3\2\2\2\u0179"+
		"\u017a\3\2\2\2\u017a\u017b\3\2\2\2\u017b\u017c\7\f\2\2\u017c\u017d\3\2"+
		"\2\2\u017d\u017e\b<\2\2\u017ex\3\2\2\2\u017f\u0180\7\61\2\2\u0180\u0181"+
		"\7\61\2\2\u0181\u0185\3\2\2\2\u0182\u0184\13\2\2\2\u0183\u0182\3\2\2\2"+
		"\u0184\u0187\3\2\2\2\u0185\u0186\3\2\2\2\u0185\u0183\3\2\2\2\u0186\u0188"+
		"\3\2\2\2\u0187\u0185\3\2\2\2\u0188\u0189\5w<\2\u0189\u018a\3\2\2\2\u018a"+
		"\u018b\b=\2\2\u018bz\3\2\2\2\u018c\u018d\7\61\2\2\u018d\u018e\7,\2\2\u018e"+
		"\u0192\3\2\2\2\u018f\u0191\13\2\2\2\u0190\u018f\3\2\2\2\u0191\u0194\3"+
		"\2\2\2\u0192\u0193\3\2\2\2\u0192\u0190\3\2\2\2\u0193\u0195\3\2\2\2\u0194"+
		"\u0192\3\2\2\2\u0195\u0196\7,\2\2\u0196\u0197\7\61\2\2\u0197\u0198\3\2"+
		"\2\2\u0198\u0199\b>\2\2\u0199|\3\2\2\2\27\2\u0123\u0129\u012b\u0131\u0138"+
		"\u013a\u013d\u0143\u0149\u014e\u0154\u0158\u015b\u0160\u0165\u016b\u0174"+
		"\u0179\u0185\u0192\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}